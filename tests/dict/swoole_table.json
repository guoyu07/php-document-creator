{
  "object": {
    "name": "Swoole\\Table"
  },
  "comment": "一个基于共享内存和锁实现的超高性能，并发数据结构。用于解决多进程/多线程数据共享和同步加锁问题",
  "namespace": "Swoole",
  "consts": {
    "TYPE_INT": {
      "comment": "整型字段",
      "type": "int",
      "value": 1
    },
    "TYPE_STRING": {
      "comment": "字符串型字段",
      "type": "int",
      "value": 7
    },
    "TYPE_FLOAT": {
      "comment": "浮点型字段",
      "type": "int",
      "value": 6
    }
  },
  "properties": [],
  "methods": {
    "__construct": {
      "access": "public",
      "comment": "创建内存表(table占用的内存总数为 (结构体长度 + KEY长度64字节 + 行尺寸$size) * (1.2预留20%作为hash冲突) * (列尺寸)，如果机器内存不足table会创建失败)",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "table_size": {
          "comment": "参数指定表格的最大行数，必须为2的指数，如1024,8192,65536等",
          "type": "int",
          "options": []
        }
      }
    },
    "column": {
      "access": "public",
      "comment": "内存表增加一列",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "name": {
          "comment": "指定字段的名称",
          "type": "string",
          "options": []
        },
        "type": {
          "comment": "指定字段类型，支持3种类型，swoole_table::TYPE_INT, swoole_table::TYPE_FLOAT, ",
          "type": "int",
          "options": []
        },
        "size": {
          "comment": "指定字符串字段的最大长度，单位为字节(字符串类型的字段必须指定$size)",
          "type": "int",
          "options": []
        }
      }
    },
    "create": {
      "access": "public",
      "comment": "创建内存表",
      "isStatic": false,
      "return": "",
      "example": "$table = new swoole_table(1024);\n$table->column('id', swoole_table::TYPE_INT, 4);       //1,2,4,8\n$table->column('name', swoole_table::TYPE_STRING, 64);\n$table->column('num', swoole_table::TYPE_FLOAT);\n$table->create();",
      "parameters": []
    },
    "destroy": {
      "access": "public",
      "comment": "销毁内存表",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    },
    "set": {
      "access": "public",
      "comment": "设置行的数据，swoole_table使用key-value的方式来访问数据。",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "key": {
          "comment": "键名",
          "type": "string",
          "options": []
        },
        "value": {
          "comment": "行数据",
          "type": "array",
          "options": []
        }
      }
    },
    "get": {
      "access": "public",
      "comment": "获取一行数据",
      "isStatic": false,
      "return": "array",
      "example": "",
      "parameters": {
        "key": {
          "comment": "行所在键",
          "type": "string",
          "options": []
        }
      }
    },
    "count": {
      "access": "public",
      "comment": "获取键的数量",
      "isStatic": false,
      "return": "int",
      "example": "",
      "parameters": []
    },
    "del": {
      "access": "public",
      "comment": "删除指定key的值",
      "isStatic": false,
      "return": "boolean",
      "example": "",
      "parameters": {
        "key": {
          "comment": "对应的数据不存在，将返回false",
          "type": "string",
          "options": []
        }
      }
    },
    "exist": {
      "access": "public",
      "comment": "检查table中是否存在某一个key",
      "isStatic": false,
      "return": "boolean",
      "example": "",
      "parameters": {
        "key": {
          "comment": "内存表的key",
          "type": "string",
          "options": []
        }
      }
    },
    "incr": {
      "access": "public",
      "comment": "原子自增操作",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "key": {
          "comment": "指定数据的key，如果$key对应的行不存在，默认列的值为0",
          "type": "string",
          "options": []
        },
        "column": {
          "comment": "指定列名，仅支持浮点型和整型字段",
          "type": "number",
          "options": []
        },
        "incrby": {
          "comment": "增量，默认为1",
          "type": "mixed",
          "options": []
        }
      }
    },
    "decr": {
      "access": "public",
      "comment": "原子自减操作",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "key": {
          "comment": "指定数据的key，如果$key对应的行不存在，默认列的值为0",
          "type": "string",
          "options": []
        },
        "column": {
          "comment": "指定列名，仅支持浮点型和整型字段",
          "type": "number",
          "options": []
        },
        "decrby": {
          "comment": "减量，默认为1",
          "type": "mixed",
          "options": []
        }
      }
    },
    "rewind": {
      "access": "public",
      "comment": "返回到迭代器的第一个元素",
      "isStatic": false,
      "return": "void",
      "example": "",
      "parameters": []
    },
    "next": {
      "access": "public",
      "comment": "向前移动到下一个元素",
      "isStatic": false,
      "return": "void",
      "example": "",
      "parameters": []
    },
    "current": {
      "access": "public",
      "comment": "返回当前元素",
      "isStatic": false,
      "return": "mixed",
      "example": "",
      "parameters": []
    },
    "key": {
      "access": "public",
      "comment": "返回当前元素的键",
      "isStatic": false,
      "return": "scalar",
      "example": "",
      "parameters": []
    },
    "valid": {
      "access": "public",
      "comment": "此方法在 rewind() 和 next() 方法之后被调用以此用来检查当前位置是否有效",
      "isStatic": false,
      "return": "boolean",
      "example": "",
      "parameters": []
    }
  }
}