{
  "object": {
    "name": "Swoole\\Buffer"
  },
  "comment": "缓冲类。提供了一个swoole_buffer类，让PHP开发者可以像C一样直接读写内存，提升程序的性能，又不用担心内存越界",
  "namespace": "Swoole",
  "consts": [],
  "properties": [],
  "methods": {
    "__construct": {
      "access": "public",
      "comment": "创建内存对象",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "size": {
          "comment": "参数$size指定了缓冲区内存的初始尺寸。当申请的内存容量不够时swoole底层会自动扩容",
          "type": "int",
          "options": []
        }
      }
    },
    "__destruct": {
      "access": "public",
      "comment": "析构函数",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    },
    "__toString": {
      "access": "public",
      "comment": "将对象转化为字符串",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    },
    "substr": {
      "access": "public",
      "comment": "从缓冲区中取出内容",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "offset": {
          "comment": "表示偏移量，如果为负数，表示倒数计算偏移量",
          "type": "int",
          "options": []
        },
        "length": {
          "comment": "表示读取数据的长度，默认为从 $offset 到整个缓存区末尾",
          "type": "int",
          "options": []
        },
        "seek": {
          "comment": "表示从缓冲区的头部将此数据移除。只有 $offset = 0 时此参数才有效",
          "type": "bool",
          "options": []
        }
      }
    },
    "write": {
      "access": "public",
      "comment": "向缓存区的任意内存位置写数据。read/write函数可以直接读写内存。所以使用务必要谨慎，否则可能会破坏现有数据",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "offset": {
          "comment": "偏移量",
          "type": "int",
          "options": []
        },
        "data": {
          "comment": "写入的数据",
          "type": "string",
          "options": []
        }
      }
    },
    "read": {
      "access": "public",
      "comment": "读取缓存区任意位置的内存(此接口是一个底层接口，可直接操作内存)",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "offset": {
          "comment": "偏移量",
          "type": "int",
          "options": []
        },
        "length": {
          "comment": "要读取的数据长度",
          "type": "int",
          "options": []
        }
      }
    },
    "append": {
      "access": "public",
      "comment": "将一个字符串数据追加到缓存区末尾",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "data": {
          "comment": "要写入的数据，支持二进制内容",
          "type": "string",
          "options": []
        }
      }
    },
    "expand": {
      "access": "public",
      "comment": "为缓存区扩容",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "size": {
          "comment": "指定新的缓冲区尺寸，必须大于当前的尺寸",
          "type": "int",
          "options": []
        }
      }
    },
    "recycle": {
      "access": "public",
      "comment": "回收缓冲中已经废弃的内存",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    },
    "clear": {
      "access": "public",
      "comment": "清理缓存区数据(行此操作后，缓存区将重置。swoole_buffer对象就可以用来处理新的请求了)",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    }
  }
}